<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				layout="vertical" 
				verticalAlign = "middle"
				showCloseButton="false">
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.events.CloseEvent;
			import org.act.od.impl.model.*;
			import mx.collections.ArrayCollection;
			
			import mx.controls.Alert;
			
			public var property:String;
			public var operator:String;
			public var value:String;
			
			[Bindable]
			public var cards:ArrayCollection = new ArrayCollection(
				[ {label:"IMSI",data:1}, //这样的数组分配方式也是第一次见:) 经过分析才学习到:这里的"data"似乎是自定义的变量名,label是组件"label"
					{label:"event_type", data:2}, 
					{label:"Duration", data:3} ,
				
				{label:"MSISDN",data:1}, //这样的数组分配方式也是第一次见:) 经过分析才学习到:这里的"data"似乎是自定义的变量名,label是组件"label"
				{label:"IMEI", data:2}, 
				{label:"MSISDN", data:3} ,
			
				{label:"VLR",data:1}, //这样的数组分配方式也是第一次见:) 经过分析才学习到:这里的"data"似乎是自定义的变量名,label是组件"label"
				{label:"cause", data:2}, 
				{label:"HLR", data:3} ,
				
				{label:"sour_lac",data:1}, //这样的数组分配方式也是第一次见:) 经过分析才学习到:这里的"data"似乎是自定义的变量名,label是组件"label"
				{label:"sour_ci", data:2}, 
				{label:"state", data:3} ,
				{label:"end_ci", data:2}, 
				{label:"cause_ID", data:3} ,
				{label:"LAC", data:2},
				{label:"dest_lac",data:1},
				{label:"dest_ci",data:2},
				{label:"oppo_num",data:3},
				{label:"send_Stamp",data:1},
				{label:"receive_Stamp",data:3}
			
				]);
			
			[Bindable]
			public var operators:ArrayCollection = new ArrayCollection(
				[ {label:">",data:1}, //这样的数组分配方式也是第一次见:) 经过分析才学习到:这里的"data"似乎是自定义的变量名,label是组件"label"
					{label:"<", data:2}, 
					{label:"==", data:3} ,
					
					{label:"!=",data:1}, //这样的数组分配方式也是第一次见:) 经过分析才学习到:这里的"data"似乎是自定义的变量名,label是组件"label"
				]);
			
			internal function onCancleHandle(event :MouseEvent) :void {
				PopUpManager.removePopUp(this);
			}
			
			internal function onConfirmHandle(event :MouseEvent) :void {
				Alert.show("expression ok");
				property = pro.selectedLabel;
				operator = op.selectedLabel;
				value = val.text;
				OrDesignerModelLocator.getInstance().setSelectProperty(property,operator,value);
				//Alert.show(property+operator+value);
				this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				PopUpManager.removePopUp(this);
			}
			internal function confirm():void{
				
				this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				PopUpManager.removePopUp(this);
			}
			
			public function setTitle(title:String):void{
				this.title="Select property";
				//this.fn.setFocus();
			}
			public function setRenameTitle(title:String):void{
				this.title=title;
			}
			public function setText(text:String):void{
				//this.fn.text = text;
				//this.fn.selectedIndex = 0;
				//this.fn.setFocus();
			}
		]]>
	</mx:Script>
	 

		
	
		<mx:HBox x="10" y="28" height="33">
			<mx:Label text="property: "	/>
			<mx:ComboBox id="pro"  dataProvider="{cards}"/>
			<mx:Label height="22" x="152" y="28" text="Bool Operator: "/>
			<mx:ComboBox id="op" width="54" height="21" dataProvider="{operators}"/>
			<mx:Label x="324" y="28" height="21" text="value: "/>
			<mx:TextInput id="val" width="84"/>
		</mx:HBox>
		
	<mx:HRule width="100%"/>
	<mx:HBox width="100%" horizontalAlign="center" horizontalCenter="0">
		<mx:Label width="35%" visible = "false"/>
		<mx:Button label="Confirm"  click="onConfirmHandle(event)" />
		<mx:Button label="Cancel" click="onCancleHandle(event)" />
		<mx:Label width="35%" visible = "false"/>
	</mx:HBox>
</mx:TitleWindow>
